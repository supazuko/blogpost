'use strict';var _extends=Object.assign||function(a){for(var c,b=1;b<arguments.length;b++)for(var d in c=arguments[b],c)Object.prototype.hasOwnProperty.call(c,d)&&(a[d]=c[d]);return a},parentWindow=void 0,totalChallenges=3,select=document.querySelector.bind(document),userbeganChallenges=function(a){return new Promise(function(b){var e=_extends({},a,{challengeIndex:1,completedChallenge:0});b(e)})},userCompletedThisChallenge=function(a){return new Promise(function(b){var c=a.challengeIndex,d=a.completedChallenge;d=c,c+=1;var e=_extends({},a,{challengeIndex:c,completedChallenge:d});parentWindow.postMessage({advancement:{index:c,completedChallenge:d}},window.location.origin),b(e)})},chain=function(){for(var b=arguments.length,a=Array(b),c=0;c<b;c++)a[c]=arguments[c];return function(e){return a.reduce(function(f,g){return f.then(function(h){return g(h)})},Promise.resolve(e))}},challengeOne={};challengeOne.stepOne=function(a){return new Promise(function(b,c){return userbeganChallenges(a).then(function(d){var e=d.styles;''===e.trim()&&c(new Error('you have not written any CSS rules'));var f=document.querySelector('body'),g=window.getComputedStyle(f),h=g.getPropertyValue('background'),j=h.substring(h.indexOf('('),h.indexOf(')')+1);'(255, 255, 255)'!==j&&c(new Error('are you sure you styled the body element to have a white background?')),b(d)})})},challengeOne.stepTwo=function(a){return new Promise(function(b,c){var d=select('.select-currency');d||c(new Error('there was and should be an element with class "select-currency". Did you get too creative or mis-typed something?'));var e=d.classList.contains('select');e||c(new Error('"div.select-currency" also needs to have a "select" class'));var f=d.querySelector('select');f||c(new Error('there was and should be a select element within  the div.select-currency element. Did you get too creative or mis-typed something?'));var g=f.classList.contains('select-text');g||c(new Error('the "select" element should have a "select-text" class')),b(a)})},challengeOne.stepThree=function(a){return new Promise(function(b,c){var d=select('button');d||c(new Error('there needs to be a "button" element in the UI'));var e=d.textContent;e&&''!==e.trim()||c(new Error('then "button" needs to have a text that ellicits user action'));var f=d.classList.contains('btn');f||c(new Error('the "button" element should have a "btn" class')),b(a)})},challengeOne.stepFour=function(a){return new Promise(function(b,c){var d=select('.conversion.mdc-elevation--z3');d||c(new Error('there is no DIV with a class of "conversion" and "mdc-elevation--z3"')),b(a)})};var auditChallengeOne=function(){var a=0<arguments.length&&arguments[0]!==void 0?arguments[0]:{};return challengeOne.stepOne(a).then(function(b){return challengeOne.stepTwo(b)}).then(function(b){return challengeOne.stepThree(b)}).then(function(b){return challengeOne.stepFour(b)}).then(userCompletedThisChallenge)},challengeTwo={};challengeTwo.stepOne=function(a){return new Promise(function(b,c){var d=select('body'),e=window.getComputedStyle(d).getPropertyValue('margin');'15px'!==e&&c(new Error('the "body" element should have the specified margin'));var f=select('.select'),g=window.getComputedStyle(f).getPropertyValue('margin-top');'50px'!==g&&c(new Error('the ".select" DIV should have the specified margin'));var h=select('.conversion.mdc-elevation--z3'),j=window.getComputedStyle(h).getPropertyValue('margin');'25px 0px'!==j&&c(new Error('the ".conversion" element should have the specified margin')),b(a)})},challengeTwo.stepTwo=function(a){return new Promise(function(b,c){var d=select('button.btn'),e=d.textContent,f=window.getComputedStyle(d).getPropertyValue('width');f=parseInt(f.substring(0,f.indexOf('px')),10),200>f&&c(new Error('the "'+e+'" button should be wider!'));var g=window.getComputedStyle(d).getPropertyValue('padding');g=parseInt(g.substring(0,g.indexOf('px')),10),8>g&&c(new Error('the "'+e+'" button has too little padding!')),b(a)})};var auditChallengeTwo=function(){var a=0<arguments.length&&arguments[0]!==void 0?arguments[0]:{};return challengeTwo.stepOne(a).then(function(b){return challengeTwo.stepTwo(b)}).then(userCompletedThisChallenge)},challengeThree={},hasFetchCall=function(a){return'CallExpression'===a.type&&'Identifier'===a.callee.type&&'fetch'===a.callee.name&&'Identifier'===a.arguments[0].type&&'url'===a.arguments[0].name},hasDisplayConversionCall=function(a){return'CallExpression'===a.type&&'Identifier'===a.callee.type&&'displayConversion'===a.callee.name};challengeThree.stepOne=function(a){return new Promise(function(b,c){var d=a.script,e=!1;return esprima.parseScript(d,{},function(f){hasDisplayConversionCall(f)&&(e=!0)}),!0==e?b(a):c(new Error('make a "fetch" call that converts the response to JSON, and then invokes "displayConversion()" with the JOSN data'))})};var auditChallengeThree=function(a){return challengeThree.stepOne(a).then(userCompletedThisChallenge)},howFar=chain(auditChallengeOne,auditChallengeTwo,auditChallengeThree),executeScript=function(a){return new Promise(function(b){var c=document.body.querySelector('#codesink');c&&c.remove();var d=document.createElement('script');d.setAttribute('id','codesink'),d.textContent=a,document.body.appendChild(d),b()})},executeStyle=function(a){return new Promise(function(b){var c=document.head.querySelector('#styles');c.textContent=a,b()})},executeMarkup=function(a){return new Promise(function(b){var c=document.querySelector('#markup-wrap');c.innerHTML=a,b()})},playCode=function(a){if(parentWindow=window.parent,a.source===parentWindow){var _event$data$payload=a.data.payload,b=_event$data$payload.styles,c=_event$data$payload.script,d=_event$data$payload.markup;executeStyle(b).then(function(){return executeMarkup(d)}).then(function(){return executeScript(c)}),howFar({styles:b,script:c,markup:d}).then(function(_ref){var e=_ref.completedChallenge;parentWindow.postMessage({feedback:{message:'All Looks Well With Challenge '+e+'.',completedChallenge:e}},window.location.origin)}).catch(function(_ref2){var e=_ref2.message;parentWindow.postMessage({feedback:{message:e}},window.location.origin)})}};window.addEventListener('message',playCode);